---
title: "HW5"
author: "Ben Rochford"
format: html
editor: visual
---

# HW5

imports

```{r}
library(tidyverse)
library(gssr)
library(marginaleffects)
library(broom)
```

```{r}
gss2022 <- gss_get_yr(2022)
```

## 5.1 Instructions

```{r}
ols <- lm(mpg ~ disp + am, data = mtcars)

new_am0 <- mtcars |> 
  mutate(am = 0)

new_am1 <- mtcars |> 
  mutate(am = 1)

p0 <- predict(ols, newdata = new_am0) ## predictions for am == 0
p1 <- predict(ols, newdata = new_am1) ## predictions for am == 1

mean(p1 - p0)
```

## 5.2 Linear Regression

```{r}
d <- gss2022 |> 
  select(tvhours, degree, madeg, padeg) |> 
  mutate(pardeg = pmax(madeg, padeg, na.rm = TRUE),
         college = if_else(degree >= 3, 1L, 0L),
         parcol = if_else(pardeg >= 3, 1L, 0L)) |>
  select(tvhours, college, parcol) |> 
  drop_na()
```

### 5.2.1 - **Additive link function, no interactions**

```{r}
mod1 <- lm(tvhours ~ college + parcol, data = d)

# ATE estimate
avg_slopes(mod1, variables = "college") |> 
  tidy()
```

**Answer** (ATE)

```{r}
new_521_1 <- d |> mutate(college = 1)
new_521_0 <- d |> mutate(college = 0)

p1_521 <- predict(mod1, newdata = new_521_1)
p0_521 <- predict(mod1, newdata = new_521_0)

mean(p1_521 - p0_521)
```

```{r}
# ATT/ATU estimate
avg_slopes(
  model = mod1, 
  variables = "college",
  by = "college" # separately by treatment group
) |> tidy()
```

**Answer** (ATT / ATU)

Here, there is no interaction, so the ATT and ATU estimates are the same as the ATE estimate.

```{r}
mean(predict(mod1, newdata = new_521_1)[d$college == 0]) - mean(predict(mod1, newdata = new_521_0)[d$college == 0])

mean(predict(mod1, newdata = new_521_1)[d$college == 1]) - mean(predict(mod1, newdata = new_521_0)[d$college == 1])
```

### 5.2.2 - **Additive link function, with interactions**

```{r}
mod2 <- lm(tvhours ~ college * parcol, data = d)

# ATE estimate
avg_slopes(mod2, variables = "college") |> 
  tidy()
```

**Answer** (ATE)

```{r}
new_522_1 <- d |> mutate(college = 1)
new_522_0 <- d |> mutate(college = 0)

p1_522 <- predict(mod2, newdata = new_522_1)
p0_522 <- predict(mod2, newdata = new_522_0)

mean(p1_522 - p0_522)
```

```{r}
# ATT/ATU estimate
avg_slopes(
  model = mod2, 
  variables = "college",
  by = "college" # separately by treatment group
) |> tidy()
```

**Answer** (ATT / ATU)

```{r}
mean(predict(mod2, newdata = new_522_1)[d$college == 0]) - mean(predict(mod2, newdata = new_522_0)[d$college == 0])

mean(predict(mod2, newdata = new_522_1)[d$college == 1]) - mean(predict(mod2, newdata = new_522_0)[d$college == 1])
```

## 5.3 Poisson Regression

**Functions**

```{r}
computeATE_U_T <- function(data, mod, x) {
  x_sym <- sym(x)
  d_1 <- data |> mutate(!!x_sym := 1)
  d_0 <- data |> mutate(!!x_sym := 0)
  
  p_1 <- predict(mod, newdata = d_1)
  p_0 <- predict(mod, newdata = d_0)
  
  ate <- mean(p_1 - p_0)
  atu <- mean(p_1[data[[x]] == 0]) - mean(p_0[data[[x]] == 0])
  att <- mean(p_1[data[[x]] == 1]) - mean(p_0[data[[x]] == 1])
  
  return(data.frame(ATE = ate, ATU = atu, ATT = att))
}
```

Data

```{r}
d <- gss2022 |>
  filter(wrkstat == 1) |> # full time workers
  select(realrinc, degree, madeg, padeg, sex, age) |> 
  mutate(pardeg = pmax(madeg, padeg, na.rm = TRUE),
         college = if_else(degree >= 3, 1L, 0L),
         parcol = if_else(pardeg >= 3, 1L, 0L),
         female = if_else(sex == 2, 1L, 0L),
         realrinc = floor(realrinc)) |>             # integer
  select(realrinc, college, parcol, female, age) |> 
  drop_na()
```

### 5.3.1 - **Using the log-counts, no interactions**

```{r}
qp1 <- glm(realrinc ~ college + (parcol + female + age + I(age^2)), 
           data = d,
           family = "quasipoisson")

avg_slopes(qp1,
           variables = "college",
           type = "link") |> 
  tidy()
```

```{r}
avg_slopes(qp1,
           variables = "college",
           type = "link",
           by = "college") |> # separately by treatment group
  tidy()
```

**Answers**

```{r}
computeATE_U_T(d, qp1, "college")
```

### 5.3.2 - **Non-linear response, no interactions**

```{r}
avg_slopes(qp1,
           variables = "college",
           type = "response") |> 
  tidy()
```

```{r}
avg_slopes(qp1,
           variables = "college",
           type = "response",
           by = "college") |> # separately by treatment group
  tidy()
```

response version of function needed:

```{r}
computeATE_U_T_response <- function(data, mod, x) {
  x_sym <- sym(x)
  d_1 <- data |> mutate(!!x_sym := 1)
  d_0 <- data |> mutate(!!x_sym := 0)
  
  p_1 <- predict(mod, newdata = d_1, type = "response")
  p_0 <- predict(mod, newdata = d_0, type = "response")
  
  ate <- mean(p_1 - p_0)
  atu <- mean(p_1[data[[x]] == 0]) - mean(p_0[data[[x]] == 0])
  att <- mean(p_1[data[[x]] == 1]) - mean(p_0[data[[x]] == 1])
  
  return(data.frame(ATE = ate, ATU = atu, ATT = att))
}
```

**Answers**

```{r}
computeATE_U_T_response(d, qp1, "college")
```

### 5.3.3 - **Using the log-counts, with interactions**

```{r}
qp2 <- glm(realrinc ~ college * (parcol + female + age + I(age^2)), 
           data = d,
           family = "quasipoisson")

avg_slopes(qp2,
           variables = "college",
           type = "link") |> 
  tidy()
```

```{r}
avg_slopes(qp2,
           variables = "college",
           type = "link",
           by = "college") |> # separately by treatment group
  tidy()
```

**Answers**

```{r}
computeATE_U_T(d, qp2, "college")
```

### 5.3.4 - **Non-linear response, with interactions**

```{r}
avg_slopes(qp2,
           variables = "college",
           type = "response") |> 
  tidy()
```

```{r}
avg_slopes(qp2,
           variables = "college",
           type = "response",
           by = "college") |> # separately by treatment group
  tidy()
```

**Answers**

```{r}
computeATE_U_T_response(d, qp2, "college")
```

## 5.4 Logistic Regression

Data

```{r}
d <- gss2022 |>
  select(abany, degree, madeg, padeg, sex, age) |> 
  mutate(pardeg = pmax(madeg, padeg, na.rm = TRUE),
         college = if_else(degree >= 3, 1L, 0L),
         parcol = if_else(pardeg >= 3, 1L, 0L),
         female = if_else(sex == 2, 1L, 0L),
         abany = if_else(abany == 1, 1L, 0L)) |>
  select(abany, college, parcol, female, age) |> 
  drop_na()
```

### 5.4.1 - **Using log-odds, no interactions**

```{r}
lr1 <- glm(abany ~ college + (parcol + female + age + I(age^2)),
          data = d,
          family = binomial)

# ATE estimate
avg_slopes(lr1,
           variables = "college",
           type = "link") |> 
  tidy()
```

```{r}
avg_slopes(lr1,
           variables = "college",
           by = "college",
           type = "link") |> 
  tidy()
```

**Answers**

```{r}
computeATE_U_T(d, lr1, "college")
```

### 5.4.2 - **Using non-linear response (aka probabilities), no interactions**

```{r}
# ATE estimate
avg_slopes(lr1,
           variables = "college",
           type = "response") |> 
  tidy()
```

```{r}
avg_slopes(lr1,
           variables = "college",
           by = "college",
           type = "response") |> 
  tidy()
```

**Answers**

```{r}
computeATE_U_T_response(d, lr1, "college")
```

### 5.4.3 - **Using log-odds, with interactions**

```{r}
lr2 <- glm(abany ~ college * (parcol + female + age + I(age^2)),
          data = d,
          family = binomial)

# ATE estimate
avg_slopes(lr2,
           variables = "college",
           type = "link") |> 
  tidy()
```

```{r}
avg_slopes(lr2,
           variables = "college",
           by = "college",
           type = "link") |> 
  tidy()
```

**Answers**

```{r}
computeATE_U_T(d, lr2, "college")
```

### 5.4.4 - **Using non-linear response (aka probabilities), with interactions**

```{r}
# ATE estimate
avg_slopes(lr2,
           variables = "college",
           type = "response") |> 
  tidy()
```

```{r}
avg_slopes(lr2,
           variables = "college",
           by = "college",
           type = "response") |> 
  tidy()
```

**Answers**

```{r}
computeATE_U_T_response(d, lr2, "college")
```
